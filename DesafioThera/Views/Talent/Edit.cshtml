@model Application.ViewModels.TalentVM

@{
    ViewBag.Title = "Edição de Talento";
}

<h2>Editar Talento - @Model.FullName</h2>


@using (Html.BeginForm("Edit", "Talent", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TalentVM</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Resume, htmlAttributes: new { @class = "control-label" })
            <input type="file" name="Resume" accept=".pdf, .doc, .docx" />
            @Html.ValidationMessageFor(model => model.Resume, "", new { @class = "text-danger" })

            @if (!string.IsNullOrEmpty(Model.ResumeFileName))
            {
                <p>@Html.DisplayNameFor(model => model.ResumeFileName): <a href="@Url.Action("DownloadResume", "Talent", new { talentId = Model.Id })">@Model.ResumeFileName</a></p>
            }
        </div>
        <div class="form-group">
            @Html.HiddenFor(model => model.Active)
            @Html.HiddenFor(model => model.ResumeFileName)
            @Html.HiddenFor(model => model.CreatedAt)
            @Html.HiddenFor(model => model.UpdatedAt)
            @Html.HiddenFor(model => model.UpdatedBy)
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar para a Lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
