@model Application.ViewModels.UserViewIndex
@using Domain.Util.Internationalization

@{
        Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = string.Format(Language.indexViewTitle, Language.UserIndexViewTitle);
    string currentLanguage = System.Threading.Thread.CurrentThread.CurrentUICulture.TextInfo.CultureName.ToLower();
}
<div class="portlet light">
    @Styles.Render("~/MetronicDataTablesMaterial/css")
    @Styles.Render("~/MetronicMaterial/css")
    <div class="portlet light md-shadow-none">
        <div class="portlet-title">
            <h3 class="text-center">@ViewBag.Title</h3>
        </div>
        <div class="portlet-body">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            <div class="table-toolbar">
                <a class="btn btn-circle btn-outline blue" href="@Url.Action("Register", "Account")"><i class="fa fa-plus"></i> @Html.DisplayName(Language.Create)</a>
                <p></p>
                @using (Html.BeginForm("Index", "User", FormMethod.Get, new { }))
                {
                    <div class="row ">
                        <div class="col-lg-3 col-md-3 col-sm-3 col-xs-3 form-group form-md-line-input">
                            <input class="page-input-s form-control" type="text" placeholder="@Language.Name" name="ResearchName" value="@Model.ResearchName" />
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-3 col-xs-3 form-group form-md-line-input">
                            <input class="page-input-s form-control" type="text" placeholder="@Language.Company" name="ResearchCompany" value="@Model.ResearchCompany" />
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-4 col-xs-4 form-group form-md-line-input">
                            @Html.DropDownListFor(m => m.ResearchActive, new List<SelectListItem> {
                                                            new SelectListItem { Text = Language.Situation, Value = "2" },
                                                            new SelectListItem { Text = Language.Active, Value = "1" },
                                                            new SelectListItem { Text = Language.Inactive, Value = "0" }
                                                        }, new { @class = "page-input-s form-control" })
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-4 col-xs-4 form-group form-md-line-input">
                            <button type="submit" class="btn btn-circle btn-outline btn-default col-lg-12 col-md-12 col-sm-12 col-xs-12"> <i class="fa fa-search">&nbsp;</i>@Language.Search</button>
                        </div>
                    </div>
                }
            </div>
            <table class="table dataTable mdl-data-table table-bordered table-striped table-bordered table-hover">
                <thead class="bg-green font-white uppercase">
                    <tr>
                        <th class="text-center">
                            @Html.DisplayNameFor(m => m.UserList[0].Name)
                        </th>
                        <th class="text-center">
                            @Html.DisplayNameFor(m => m.UserList[0].Email)
                        </th>
                        <th class="text-center">
                            @Html.DisplayNameFor(m => m.UserList[0].Cpf)
                        </th>
                        <th class="text-center">
                            @Html.DisplayNameFor(m => m.UserList[0].Profile)
                        </th>
                        <th class="text-center">
                            @Html.DisplayName(Language.Situation)
                        </th>
                        <th class="text-center">
                            @Html.DisplayName(Language.Action)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.UserList != null)
                    {
                        foreach (var item in Model.UserList)
                        {
                            bool isActive = item.Active.Equals(((int)Domain.Enum.GenericStatusEnum.Active).ToString());
                            var editClass = isActive ? "" : "hide";
                            <tr>
                                <td class="text-center col-md-3" style="vertical-align:middle !important">
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td class="text-center col-md-2" style="vertical-align:middle !important">
                                    @Html.DisplayFor(modelItem => item.Email)
                                </td>
                                <td class="cpf_index_table text-center col-md-2" style="vertical-align:middle !important">
                                    @Html.DisplayFor(modelItem => item.Cpf)
                                </td>
                                <td class="text-center col-md-1" style="vertical-align:middle !important">
                                    @if (currentLanguage.ToLower().Contains("br"))
                                    {
                                        @Html.DisplayFor(modelItem => item.Profile.Name)
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(modelItem => item.Profile.NameInEnglish)
                                    }
                                </td>
                                <td class="text-center col-md-1 situation" style="vertical-align:middle !important">
                                    @Model.StatusName(item.Active)
                                </td>
                                <td class="text-center col-sm-4 col-md-3">
                                    <a href="@Url.Action("Edit", "User", new { item.Id })" title="@Language.Edit" class="btn btn-circle btn-outline grey-gallery @editClass edit-button">
                                        @Html.DisplayName(Language.Edit)<i class="fa fa-edit"></i>
                                    </a>
                                    @if (isActive)
                                    {
                                        <a title="@Language.Deactivate" class="btn btn-circle btn-outline red btn-delete" data-target-url="@Url.Action("Deactivate", "User", new { id = item.Id })" data-status="@item.Active">
                                            <span>@Html.DisplayName(Language.Deactivate)</span><i class="fa fa-times-circle"></i>
                                        </a>
                                    }
                                    else
                                    {
                                        <a title="@Language.Reactivate" class="btn btn-circle btn-outline blue-steel btn-delete" data-target-url="@Url.Action("Reactivate", "User", new { id = item.Id })" data-status="@item.Active">
                                            <span>@Html.DisplayName(Language.Reactivate)</span><i class="fa fa-refresh"></i>
                                        </a>
                                    }
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/MetronicDataTables/js")
    @Scripts.Render("~/DisableButton/js")
    <script>
        $(document).ready(function () { InitDatatable("@currentLanguage"); });
    </script>
}
